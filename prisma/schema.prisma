// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id @default(uuid())
  email String @unique
  username  String
  password String
  feeback Feedback[]
  votes Vote[]
  comments Comment[]
  replys Comment[] @relation("replyTo")
}

enum Status {
  Suggestion
  Planned
  Progress
  Live
}

enum Category {
  Feature
  UI
  UX
  Enchancement
  Bug
}

model Feedback {
  id String @id @default(uuid())
  title String
  details String
  status Status
  category Category

  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  votes Vote[]
  comments Comment[]
}

model Vote {
  id String @id @default(uuid())
  
  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  feedbackId String 
  feedback Feedback @relation(fields: [feedbackId], references: [id], onDelete: Cascade)
}

model Comment {
  id String @id @default(uuid())
  content String
  createdAt DateTime @default(now())
  children Comment[] @relation(name: "parent")

  postId String
  post Feedback @relation(fields: [postId], references: [id], onDelete: Cascade)
  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  parentId String? 
  parent Comment? @relation(fields: [parentId], references: [id], onDelete: Cascade, name: "parent")
  replyToId String?
  replyTo User? @relation(fields: [replyToId], references: [id], onDelete: Cascade, name: "replyTo")
}
